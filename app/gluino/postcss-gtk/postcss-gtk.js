import postcss from 'postcss';
require("./fix-ugly-functions");
import imports from 'postcss-import';
import fixFontDeclarations from './fix-font-declarations';
import colorFunctions from './color-functions';
colorFunctions();
import gtkColorVariables from './color-variables';
import gtkPseudoClasses from './psuedo-classes';
import valueHook from './value-hook';
import functions from 'postcss-functions';

const gtkFunctions = functions({
    functions : {
        "image": (...args) => {
            if (args.length === 1) {
                return `linear-gradient(${args[0]}, ${args[0]})`;
            } else {
                return args[0];
            }
            return `image(${args.join(',')})`;
        },
        "linear-gradient": (...args) => {
            if (args.length === 1) {
                return `linear-gradient(${args[0]}, ${args[0]})`;
            }
            return `linear-gradient(${args.join(',')})`;
        },
        "from": color => `${color} 0%`,
        "to": color => `${color} 100%`,
        "color-stop": (stop, color) => `${color} ${stop*100}%`,
        "-gtk-gradient": (...args) => {  // FIXME not complete support
            console.log(args);
            if (args[0] === 'linear') {
                return `linear-gradient(${args.slice(3).join(',')})`;
            } else if (args[0] === 'radial') {
                return `radial-gradient(${args.slice(5).join(',')})`;
            }
            return;
        },
        "-gtk-scaled": (...args) => {
            return args[0];
        },
        "-gtk-recolor": (...args) => {
            return args[0];
        }
    }
});

export default postcss([imports(), fixFontDeclarations, gtkColorVariables, gtkPseudoClasses, valueHook, gtkFunctions])
// Generated by CoffeeScript 2.2.3
/* (function() {
  var fixFontDeclarations, gtkColorVariables, gtkPseudoClasses, imports, postcss, valueHook;

  postcss = require("postcss");

  require("./fix-ugly-functions");

  imports = require("postcss-import");

  fixFontDeclarations = require("./fix-font-declarations");

  gtkColorVariables = require("./color-variables");

  require("./color-functions");

  gtkPseudoClasses = require("./psuedo-classes");

  valueHook = require("./value-hook");

  module.exports = postcss([imports(), fixFontDeclarations, gtkColorVariables, gtkPseudoClasses, valueHook]);

}).call(this); */
